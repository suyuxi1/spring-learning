<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soft1851.spring.mybatis.mapper.StudentMapper">
    <insert id="insert" parameterType="Student" useGeneratedKeys="true"
            keyProperty="studentId">
        INSERT INTO t_student (clazz_id, student_name, hometown, birthday)
            VALUE (#{clazzId}, #{studentName}, #{hometown}, #{birthday})
    </insert>

    <delete id="delete" parameterType="int">
        DELETE
        FROM t_student
        WHERE student_id = #{studentId}
    </delete>

    <select id="getStudentById" parameterType="int" resultType="Student">
        SELECT *
        FROM t_student
        WHERE student_id = #{studentId}
    </select>

    <update id="update" parameterType="Student">
        UPDATE t_student
        SET student_name = #{studentName},
            hometown     = #{hometown},
            birthday     = #{birthday}
        WHERE student_id = #{studentId}
    </update>

    <insert id="batchInsert" parameterType="Student">
        INSERT INTO t_student values
        <foreach collection="student" item="item" separator=",">
            (#{item.studentId}, #{item.clazzId}, #{item.studentName}, #{item.hometown}, #{item.birthday})
        </foreach>
    </insert>

    <delete id="batchDelete" parameterType="int">
        DELETE FROM t_student WHERE student_id IN
        <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="students" item="item" index="index" open="" close="" separator=";">
            UPDATE t_student t
            <set>
                t.student_name = #{item.studentName}
            </set>
            WHERE t.student_id = #{item.studentId}
        </foreach>
    </update>

    <select id="selectLimit" resultType="Student">
        SELECT student_id, clazz_id, student_name, hometown, birthday
        FROM t_student
        WHERE clazz_id = ${2}
          AND hometown LIKE '%江苏%'
    </select>

    <select id="selectLimitByDynamicSql" parameterType="Student" resultType="Student">
        SELECT student_id, clazz_id, student_name, hometown, birthday
        FROM t_student

        # 方法一：
        <!--        <where>-->
        <!--            <if test="clazzId != null">-->
        <!--                clazz_id = #{clazzId}-->
        <!--            </if>-->
        <!--            <if test="hometown != null">-->
        <!--                AND hometown like "%"#{hometown}"%"-->
        <!--            </if>-->
        <!--            <if test="studentName != null">-->
        <!--                AND student_name like "%"#{studentName}"%"-->
        <!--            </if>-->
        <!--        </where>-->
        # 方法二：
        WHERE 1 = 1
        <choose>
            <when test="clazzId != null">
                clazz_id = #{clazzId}
            </when>
            <when test="hometown != null">
                AND hometown like "%"#{hometown}"%"
            </when>
            <otherwise>
                AND student_id &gt; ${0}
            </otherwise>
        </choose>
    </select>
    <resultMap id="studentMap" type="Student">
        <id column="student_id" property="studentId"/>
        <result column="student_name" property="studentName"/>
        <result column="hometown" property="hometown"/>
        <result column="birthday" property="birthday"/>
        <association property="clazz" javaType="Clazz">
            <id column="clazz_id" property="clazzId"/>
            <result column="clazz_name" property="clazzName"/>
        </association>
    </resultMap>
    <select id="selectAll" resultMap="studentMap">
        SELECT s.student_id, s.student_name, s.hometown, s.birthday, c.clazz_name
        FROM t_student s
        RIGHT JOIN t_clazz c
        ON s.clazz_id = c.clazz_id
        ORDER BY s.birthday DESC
    </select>

</mapper>